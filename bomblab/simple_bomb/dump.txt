
simple_bomb:     file format elf64-x86-64


Disassembly of section .init:

0000000000000638 <_init>:
 638:	48 83 ec 08          	sub    $0x8,%rsp
 63c:	48 8b 05 a5 09 20 00 	mov    0x2009a5(%rip),%rax        # 200fe8 <__gmon_start__>
 643:	48 85 c0             	test   %rax,%rax
 646:	74 02                	je     64a <_init+0x12>
 648:	ff d0                	callq  *%rax
 64a:	48 83 c4 08          	add    $0x8,%rsp
 64e:	c3                   	retq   

Disassembly of section .plt:

0000000000000650 <.plt>:
 650:	ff 35 4a 09 20 00    	pushq  0x20094a(%rip)        # 200fa0 <_GLOBAL_OFFSET_TABLE_+0x8>
 656:	ff 25 4c 09 20 00    	jmpq   *0x20094c(%rip)        # 200fa8 <_GLOBAL_OFFSET_TABLE_+0x10>
 65c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000660 <puts@plt>:
 660:	ff 25 4a 09 20 00    	jmpq   *0x20094a(%rip)        # 200fb0 <puts@GLIBC_2.2.5>
 666:	68 00 00 00 00       	pushq  $0x0
 66b:	e9 e0 ff ff ff       	jmpq   650 <.plt>

0000000000000670 <__assert_fail@plt>:
 670:	ff 25 42 09 20 00    	jmpq   *0x200942(%rip)        # 200fb8 <__assert_fail@GLIBC_2.2.5>
 676:	68 01 00 00 00       	pushq  $0x1
 67b:	e9 d0 ff ff ff       	jmpq   650 <.plt>

0000000000000680 <__isoc99_sscanf@plt>:
 680:	ff 25 3a 09 20 00    	jmpq   *0x20093a(%rip)        # 200fc0 <__isoc99_sscanf@GLIBC_2.7>
 686:	68 02 00 00 00       	pushq  $0x2
 68b:	e9 c0 ff ff ff       	jmpq   650 <.plt>

0000000000000690 <getline@plt>:
 690:	ff 25 32 09 20 00    	jmpq   *0x200932(%rip)        # 200fc8 <getline@GLIBC_2.2.5>
 696:	68 03 00 00 00       	pushq  $0x3
 69b:	e9 b0 ff ff ff       	jmpq   650 <.plt>

00000000000006a0 <exit@plt>:
 6a0:	ff 25 2a 09 20 00    	jmpq   *0x20092a(%rip)        # 200fd0 <exit@GLIBC_2.2.5>
 6a6:	68 04 00 00 00       	pushq  $0x4
 6ab:	e9 a0 ff ff ff       	jmpq   650 <.plt>

Disassembly of section .plt.got:

00000000000006b0 <__cxa_finalize@plt>:
 6b0:	ff 25 42 09 20 00    	jmpq   *0x200942(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 6b6:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

00000000000006c0 <_start>:
 6c0:	31 ed                	xor    %ebp,%ebp
 6c2:	49 89 d1             	mov    %rdx,%r9
 6c5:	5e                   	pop    %rsi
 6c6:	48 89 e2             	mov    %rsp,%rdx
 6c9:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 6cd:	50                   	push   %rax
 6ce:	54                   	push   %rsp
 6cf:	4c 8d 05 4a 02 00 00 	lea    0x24a(%rip),%r8        # 920 <__libc_csu_fini>
 6d6:	48 8d 0d d3 01 00 00 	lea    0x1d3(%rip),%rcx        # 8b0 <__libc_csu_init>
 6dd:	48 8d 3d 4d 01 00 00 	lea    0x14d(%rip),%rdi        # 831 <main>
 6e4:	ff 15 f6 08 20 00    	callq  *0x2008f6(%rip)        # 200fe0 <__libc_start_main@GLIBC_2.2.5>
 6ea:	f4                   	hlt    
 6eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000006f0 <deregister_tm_clones>:
 6f0:	48 8d 3d 19 09 20 00 	lea    0x200919(%rip),%rdi        # 201010 <stdin@@GLIBC_2.2.5>
 6f7:	55                   	push   %rbp
 6f8:	48 8d 05 11 09 20 00 	lea    0x200911(%rip),%rax        # 201010 <stdin@@GLIBC_2.2.5>
 6ff:	48 39 f8             	cmp    %rdi,%rax
 702:	48 89 e5             	mov    %rsp,%rbp
 705:	74 19                	je     720 <deregister_tm_clones+0x30>
 707:	48 8b 05 ca 08 20 00 	mov    0x2008ca(%rip),%rax        # 200fd8 <_ITM_deregisterTMCloneTable>
 70e:	48 85 c0             	test   %rax,%rax
 711:	74 0d                	je     720 <deregister_tm_clones+0x30>
 713:	5d                   	pop    %rbp
 714:	ff e0                	jmpq   *%rax
 716:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 71d:	00 00 00 
 720:	5d                   	pop    %rbp
 721:	c3                   	retq   
 722:	0f 1f 40 00          	nopl   0x0(%rax)
 726:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 72d:	00 00 00 

0000000000000730 <register_tm_clones>:
 730:	48 8d 3d d9 08 20 00 	lea    0x2008d9(%rip),%rdi        # 201010 <stdin@@GLIBC_2.2.5>
 737:	48 8d 35 d2 08 20 00 	lea    0x2008d2(%rip),%rsi        # 201010 <stdin@@GLIBC_2.2.5>
 73e:	55                   	push   %rbp
 73f:	48 29 fe             	sub    %rdi,%rsi
 742:	48 89 e5             	mov    %rsp,%rbp
 745:	48 c1 fe 03          	sar    $0x3,%rsi
 749:	48 89 f0             	mov    %rsi,%rax
 74c:	48 c1 e8 3f          	shr    $0x3f,%rax
 750:	48 01 c6             	add    %rax,%rsi
 753:	48 d1 fe             	sar    %rsi
 756:	74 18                	je     770 <register_tm_clones+0x40>
 758:	48 8b 05 91 08 20 00 	mov    0x200891(%rip),%rax        # 200ff0 <_ITM_registerTMCloneTable>
 75f:	48 85 c0             	test   %rax,%rax
 762:	74 0c                	je     770 <register_tm_clones+0x40>
 764:	5d                   	pop    %rbp
 765:	ff e0                	jmpq   *%rax
 767:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 76e:	00 00 
 770:	5d                   	pop    %rbp
 771:	c3                   	retq   
 772:	0f 1f 40 00          	nopl   0x0(%rax)
 776:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 77d:	00 00 00 

0000000000000780 <__do_global_dtors_aux>:
 780:	80 3d 91 08 20 00 00 	cmpb   $0x0,0x200891(%rip)        # 201018 <completed.7696>
 787:	75 2f                	jne    7b8 <__do_global_dtors_aux+0x38>
 789:	48 83 3d 67 08 20 00 	cmpq   $0x0,0x200867(%rip)        # 200ff8 <__cxa_finalize@GLIBC_2.2.5>
 790:	00 
 791:	55                   	push   %rbp
 792:	48 89 e5             	mov    %rsp,%rbp
 795:	74 0c                	je     7a3 <__do_global_dtors_aux+0x23>
 797:	48 8b 3d 6a 08 20 00 	mov    0x20086a(%rip),%rdi        # 201008 <__dso_handle>
 79e:	e8 0d ff ff ff       	callq  6b0 <__cxa_finalize@plt>
 7a3:	e8 48 ff ff ff       	callq  6f0 <deregister_tm_clones>
 7a8:	c6 05 69 08 20 00 01 	movb   $0x1,0x200869(%rip)        # 201018 <completed.7696>
 7af:	5d                   	pop    %rbp
 7b0:	c3                   	retq   
 7b1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 7b8:	f3 c3                	repz retq 
 7ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000007c0 <frame_dummy>:
 7c0:	55                   	push   %rbp
 7c1:	48 89 e5             	mov    %rsp,%rbp
 7c4:	5d                   	pop    %rbp
 7c5:	e9 66 ff ff ff       	jmpq   730 <register_tm_clones>

00000000000007ca <fail>:
 7ca:	48 83 ec 08          	sub    $0x8,%rsp
 7ce:	48 8d 3d 5f 01 00 00 	lea    0x15f(%rip),%rdi        # 934 <_IO_stdin_used+0x4>
 7d5:	e8 86 fe ff ff       	callq  660 <puts@plt>
 7da:	bf ff ff ff ff       	mov    $0xffffffff,%edi
 7df:	e8 bc fe ff ff       	callq  6a0 <exit@plt>

00000000000007e4 <secret>:
 7e4:	48 83 ec 18          	sub    $0x18,%rsp
 7e8:	48 8d 54 24 0c       	lea    0xc(%rsp),%rdx
 7ed:	48 8d 35 47 01 00 00 	lea    0x147(%rip),%rsi        # 93b <_IO_stdin_used+0xb>
 7f4:	b8 00 00 00 00       	mov    $0x0,%eax
 7f9:	e8 82 fe ff ff       	callq  680 <__isoc99_sscanf@plt>
 7fe:	85 c0                	test   %eax,%eax
 800:	7e 1b                	jle    81d <secret+0x39>
 802:	48 8d 3d 39 01 00 00 	lea    0x139(%rip),%rdi        # 942 <_IO_stdin_used+0x12>
 809:	e8 52 fe ff ff       	callq  660 <puts@plt>
 80e:	81 7c 24 0c e2 07 00 	cmpl   $0x7e2,0xc(%rsp)
 815:	00 
 816:	75 0f                	jne    827 <secret+0x43>
 818:	48 83 c4 18          	add    $0x18,%rsp
 81c:	c3                   	retq   
 81d:	b8 00 00 00 00       	mov    $0x0,%eax
 822:	e8 a3 ff ff ff       	callq  7ca <fail>
 827:	b8 00 00 00 00       	mov    $0x0,%eax
 82c:	e8 99 ff ff ff       	callq  7ca <fail>

0000000000000831 <main>:
 831:	48 83 ec 18          	sub    $0x18,%rsp
 835:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
 83c:	00 00 
 83e:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
 845:	00 
 846:	83 ff 01             	cmp    $0x1,%edi
 849:	7e 29                	jle    874 <main+0x43>
 84b:	48 8b 46 08          	mov    0x8(%rsi),%rax
 84f:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
 854:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
 859:	e8 86 ff ff ff       	callq  7e4 <secret>
 85e:	48 8d 3d f9 00 00 00 	lea    0xf9(%rip),%rdi        # 95e <_IO_stdin_used+0x2e>
 865:	e8 f6 fd ff ff       	callq  660 <puts@plt>
 86a:	b8 00 00 00 00       	mov    $0x0,%eax
 86f:	48 83 c4 18          	add    $0x18,%rsp
 873:	c3                   	retq   
 874:	48 89 e6             	mov    %rsp,%rsi
 877:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
 87c:	48 8b 15 8d 07 20 00 	mov    0x20078d(%rip),%rdx        # 201010 <stdin@@GLIBC_2.2.5>
 883:	e8 08 fe ff ff       	callq  690 <getline@plt>
 888:	48 85 c0             	test   %rax,%rax
 88b:	7f c7                	jg     854 <main+0x23>
 88d:	48 8d 0d d4 00 00 00 	lea    0xd4(%rip),%rcx        # 968 <__PRETTY_FUNCTION__.3108>
 894:	ba 0f 00 00 00       	mov    $0xf,%edx
 899:	48 8d 35 ac 00 00 00 	lea    0xac(%rip),%rsi        # 94c <_IO_stdin_used+0x1c>
 8a0:	48 8d 3d b3 00 00 00 	lea    0xb3(%rip),%rdi        # 95a <_IO_stdin_used+0x2a>
 8a7:	e8 c4 fd ff ff       	callq  670 <__assert_fail@plt>
 8ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000008b0 <__libc_csu_init>:
 8b0:	41 57                	push   %r15
 8b2:	41 56                	push   %r14
 8b4:	49 89 d7             	mov    %rdx,%r15
 8b7:	41 55                	push   %r13
 8b9:	41 54                	push   %r12
 8bb:	4c 8d 25 d6 04 20 00 	lea    0x2004d6(%rip),%r12        # 200d98 <__frame_dummy_init_array_entry>
 8c2:	55                   	push   %rbp
 8c3:	48 8d 2d d6 04 20 00 	lea    0x2004d6(%rip),%rbp        # 200da0 <__init_array_end>
 8ca:	53                   	push   %rbx
 8cb:	41 89 fd             	mov    %edi,%r13d
 8ce:	49 89 f6             	mov    %rsi,%r14
 8d1:	4c 29 e5             	sub    %r12,%rbp
 8d4:	48 83 ec 08          	sub    $0x8,%rsp
 8d8:	48 c1 fd 03          	sar    $0x3,%rbp
 8dc:	e8 57 fd ff ff       	callq  638 <_init>
 8e1:	48 85 ed             	test   %rbp,%rbp
 8e4:	74 20                	je     906 <__libc_csu_init+0x56>
 8e6:	31 db                	xor    %ebx,%ebx
 8e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 8ef:	00 
 8f0:	4c 89 fa             	mov    %r15,%rdx
 8f3:	4c 89 f6             	mov    %r14,%rsi
 8f6:	44 89 ef             	mov    %r13d,%edi
 8f9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 8fd:	48 83 c3 01          	add    $0x1,%rbx
 901:	48 39 dd             	cmp    %rbx,%rbp
 904:	75 ea                	jne    8f0 <__libc_csu_init+0x40>
 906:	48 83 c4 08          	add    $0x8,%rsp
 90a:	5b                   	pop    %rbx
 90b:	5d                   	pop    %rbp
 90c:	41 5c                	pop    %r12
 90e:	41 5d                	pop    %r13
 910:	41 5e                	pop    %r14
 912:	41 5f                	pop    %r15
 914:	c3                   	retq   
 915:	90                   	nop
 916:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 91d:	00 00 00 

0000000000000920 <__libc_csu_fini>:
 920:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000924 <_fini>:
 924:	48 83 ec 08          	sub    $0x8,%rsp
 928:	48 83 c4 08          	add    $0x8,%rsp
 92c:	c3                   	retq   
